version: '3.8'

services:
  betting-bot:
    build: .
    container_name: betting-bot-production
    restart: unless-stopped
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - DATABASE_URL=sqlite:///data/betting_bot.db
      - LOG_LEVEL=INFO
      - ENABLE_RATE_LIMITING=true
      - ADMIN_USER_IDS=${ADMIN_USER_IDS}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - betting-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: betting-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - betting-bot
    networks:
      - betting-network

  monitoring:
    image: prom/prometheus:latest
    container_name: betting-bot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - betting-network

  grafana:
    image: grafana/grafana:latest
    container_name: betting-bot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - betting-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  betting-network:
    driver: bridge
